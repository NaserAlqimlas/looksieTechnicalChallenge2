// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(255)
  description   String?
  in_stock      Boolean  @default(false)
  price         Float
  attributes    Product_Attributes[]
  SKU           SKUs[]
  variants      Product_Variants[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Product_Attributes {
  id            Int     @id @default(autoincrement())
  name          String
  product_id    Int
  product       Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  values        Product_Values[]
  variants      Product_Variants[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Product_Values {
  id              Int      @id @default(autoincrement())
  value           String
  attribute_id    Int
  attribute       Product_Attributes @relation(fields: [attribute_id], references: [id], onDelete: Cascade)
  variants        Product_Variants[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model SKUs {
  id            Int @id @default(autoincrement())
  barcode       String
  price         Float
  stock         Int
  product_id    Int
  product       Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  variants      Product_Variants[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Product_Variants {
  id            Int @id @default(autoincrement())
  product_id    Int
  SKU_id        Int
  value_id      Int
  attribute_id  Int
  product       Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  attribute     Product_Attributes @relation(fields: [attribute_id], references: [id])
  values        Product_Values @relation(fields: [value_id], references: [id])
  skus          SKUs @relation(fields: [SKU_id], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}